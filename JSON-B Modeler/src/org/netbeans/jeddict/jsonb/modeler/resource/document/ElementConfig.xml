<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<element-config>
    <groups>
        <group id="JSONB_PROP" name="Properties" position="1"/>
        <group id="UI_PROP" name="UI Properties"  position="50"/>
        
        <group id="ATTRIBUTE_CONSTRAINTS" name="Field-level constraints - Bean Validation Properties" position="10" />
        <group id="KEY_CONSTRAINTS" name="Key Type argument constraints - Bean Validation Properties" position="11" />
        <group id="VALUE_CONSTRAINTS" name="Type argument constraints - Bean Validation Properties" position="12" />
        
    </groups>
    <elements>
        <element id="JSONBMapping" groupId="JSONB_PROP" class="org.netbeans.jeddict.jsonb.modeler.spec.JSONBMapping">
            <attributes>
                <attribute id="entityMappings" class="org.netbeans.jpa.modeler.spec.EntityMappings" name="entityMappings">
                </attribute>
            </attributes>
        </element>
        <element id="Document" groupId="JSONB_PROP" class="org.netbeans.jeddict.jsonb.modeler.spec.JSONBDocument">
            <attributes>
                <attribute id="javaClass" class="org.netbeans.jpa.modeler.spec.extend.JavaClass" name="javaClass">
                </attribute>
            </attributes>
        </element>
        <element id="JSONBNode" groupId="JSONB_PROP" class="org.netbeans.jeddict.jsonb.modeler.spec.JSONBNode">
            <attributes>
                <attribute id="attribute" class="org.netbeans.jpa.modeler.spec.extend.Attribute" name="attribute">
                </attribute>
            </attributes>
        </element>
        <element id="EntityMappings" class="org.netbeans.jpa.modeler.spec.EntityMappings">
            <attributes>
                <attribute id="jsonbPropertyNamingStrategy" groupId="JSONB_PROP" class="org.netbeans.jpa.modeler.spec.jsonb.PropertyNamingStrategy" name="jsonbPropertyNamingStrategy">
                    <display-name>Property Naming Strategy</display-name>
                </attribute>
                <attribute id="jsonbNillable" groupId="JSONB_PROP" class="java.lang.Boolean" name="jsonbNillable">
                    <display-name>Nillable</display-name>
                </attribute>
                <attribute id="jsonbDateFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbDateFormat" name="jsonbDateFormat" >
                </attribute>
                <attribute id="jsonbNumberFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbNumberFormat" name="jsonbNumberFormat" >
                </attribute>
            </attributes>
        </element>
        <element id="JavaClass" class="org.netbeans.jpa.modeler.spec.extend.JavaClass">
            <attributes>
                <attribute id="jsonbNillable" groupId="JSONB_PROP" class="java.lang.Boolean" name="jsonbNillable">
                    <display-name>Nillable</display-name>
                </attribute>
                <attribute id="jsonbDateFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbDateFormat" name="jsonbDateFormat" >
                </attribute>
                <attribute id="jsonbNumberFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbNumberFormat" name="jsonbNumberFormat" >
                </attribute>
            </attributes>
        </element>
        <element id="Attribute" class="org.netbeans.jpa.modeler.spec.extend.Attribute">
            <attributes>
                <attribute id="name" groupId="JSONB_PROP" class="java.lang.String" name="name" read-only="true">
                    <display-name>Attribute</display-name>
                </attribute>
                <attribute id="jsonbTransient" groupId="JSONB_PROP" class="java.lang.Boolean" name="jsonbTransient" refresh-onchange="true">
                    <display-name>Transient</display-name>
                </attribute>
                <attribute id="jsonbProperty" groupId="JSONB_PROP" class="java.lang.String" name="jsonbProperty">
                    <display-name>Property</display-name>
                    <visible><![CDATA[!this.getJsonbTransient()]]></visible>
                </attribute>
                <attribute id="jsonbNillable" groupId="JSONB_PROP" class="java.lang.Boolean" name="jsonbNillable">
                    <display-name>Nillable</display-name>
                    <visible><![CDATA[!this.getJsonbTransient()]]></visible>
                </attribute>
                <attribute id="jsonbDateFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbDateFormat" name="jsonbDateFormat" >
                </attribute>
                <attribute id="jsonbNumberFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbNumberFormat" name="jsonbNumberFormat" >
                </attribute>
                <attribute id="includeInUI" groupId="UI_PROP" class="java.lang.Boolean" name="includeInUI">
                    <display-name>Include in UI</display-name>
                    <description>
                        If unselected, attribute will not be available in frontend.
                    </description>
                </attribute>
            </attributes>
        </element>
        <element id="JsonbDateFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbDateFormat">
            <attributes>
                <attribute id="date_value" groupId="JSONB_PROP" class="java.lang.String" name="value">
                    <display-name>Date Format</display-name>
                </attribute>
                <attribute id="date_locale" groupId="JSONB_PROP" class="java.lang.String" name="locale">
                    <display-name>Date Locale</display-name>
                </attribute>
            </attributes>
        </element>
        <element id="JsonbNumberFormat" class="org.netbeans.jpa.modeler.spec.jsonb.JsonbNumberFormat">
            <attributes>
                <attribute id="number_value" groupId="JSONB_PROP" class="java.lang.String" name="value">
                    <display-name>Number Format</display-name>
                </attribute>
                <attribute id="number_locale" groupId="JSONB_PROP" class="java.lang.String" name="locale">
                    <display-name>Number Locale</display-name>
                </attribute>
            </attributes>
        </element>
    
       
        <!--On Attribute-->
        <element id="NotNull" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.NotNull">
            <attributes>
                <attribute id="notnull.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true" >
                    <display-name>@NotNull</display-name>
                    <description>
                        The value of the field or property must not be null.
                    </description>
                </attribute>
                <attribute id="notnull.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("NotNull") != null &&
                    ((node.getAttribute().getAttributeConstraintsMap().get("Null").selected==true && this.selected==true ) || node.getAttribute().getAttributeConstraintsMap().get("Null").selected==false)]]></visible>
        </element>
        <element id="Null" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Null">
            <attributes>
                <attribute id="null.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Null</display-name>
                    <description>
                        The value of the field or property must be null.
                    </description>
                </attribute>
                <attribute id="null.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Null") != null && 
                        ((node.getAttribute().getAttributeConstraintsMap().get("NotNull").selected==true && this.selected==true ) || node.getAttribute().getAttributeConstraintsMap().get("NotNull").selected==false)]]></visible>
        </element>
        <element id="AssertFalse" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.AssertFalse">
            <attributes>
                <attribute id="assertFalse.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@AssertFalse</display-name>
                    <description>
                        The value of the field or property must be false.
                    </description>
                </attribute>
                <attribute id="assertFalse.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("AssertFalse") != null &&
                        ((node.getAttribute().getAttributeConstraintsMap().get("AssertTrue").selected==true && this.selected==true ) || node.getAttribute().getAttributeConstraintsMap().get("AssertTrue").selected==false)]]></visible>
        </element>
        <element id="AssertTrue" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.AssertTrue">
            <attributes>
                <attribute id="assertTrue.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@AssertTrue</display-name>
                    <description>
                        The value of the field or property must be true.
                    </description>
                </attribute>
                <attribute id="assertTrue.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("AssertTrue") != null &&
                        ((node.getAttribute().getAttributeConstraintsMap().get("AssertFalse").selected==true && this.selected==true ) || node.getAttribute().getAttributeConstraintsMap().get("AssertFalse").selected==false)]]></visible>
        </element>
        <element id="Past" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Past">
            <attributes>
                <attribute id="past.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Past</display-name>
                    <description>
                        The value of the field or property must be a date in the past.
                    </description>
                </attribute>
<!--                <attribute id="past.orPresent" class="java.lang.Boolean" name="orPresent" >
                    <display-name>      orPresent</display-name>
                    <description>
                        The notion of present here is defined relatively to the type on which the constraint is used. 
                        For instance, if the constraint is on a Year, present would mean the whole current year.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>-->
                <attribute id="past.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Past") != null &&
                        ((node.getAttribute().getAttributeConstraintsMap().get("Future").selected==true && this.selected==true ) || node.getAttribute().getAttributeConstraintsMap().get("Future").selected==false)]]></visible>
        </element>
        <element id="Future" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Future">
            <attributes>
                <attribute id="future.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Future</display-name>
                    <description>
                        The value of the field or property must be a date in the future.
                    </description>
                </attribute>
<!--                <attribute id="future.orPresent" class="java.lang.Boolean" name="orPresent" >
                    <display-name>      orPresent</display-name>
                    <description>
                        The notion of present here is defined relatively to the type on which the constraint is used. 
                        For instance, if the constraint is on a Year, present would mean the whole current year.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>-->
                <attribute id="future.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Future") != null &&
                        ((node.getAttribute().getAttributeConstraintsMap().get("Past").selected==true && this.selected==true ) || node.getAttribute().getAttributeConstraintsMap().get("Past").selected==false)]]></visible>
        </element>
        <element id="Size" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Size">
            <attributes>
                <attribute id="size.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Size</display-name>
                    <description>
                        The size of the field or property is evaluated and must match the specified boundaries. 
                    </description>
                </attribute>
                <attribute id="size.min" class="java.lang.Integer" name="min">
                    <display-name>      Min size</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="size.max" class="java.lang.Integer" name="max">
                    <display-name>      Max size</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="size.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Size") != null]]></visible>
        </element>
        <element id="Pattern" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Pattern">
            <attributes>
                <attribute id="pattern.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Pattern</display-name>
                    <description>
                        The value of the field or property must match the regular expression defined in the regexp element.
                    </description>
                </attribute>
                <attribute id="pattern.regexp" class="java.lang.String" name="regexp">
                    <display-name>      regexp</display-name>
                    <description>
                        The regular expression to match
                    </description>                    
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="pattern.flags" class="java.lang.String" name="flags">
                    <display-name>      flag</display-name>
                    <description>
                        Flags considered when resolving the regular expression.
                        [ UNIX_LINES, CASE_INSENSITIVE, COMMENTS, MULTILINE, DOTALL, UNICODE_CASE, CANON_EQ ]
                        *** e.g : CASE_INSENSITIVE, MULTILINE (comma-separated value)
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>                    
                </attribute>
                <attribute id="pattern.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                    <description>
                        The error message template
                    </description>                       
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Pattern") != null]]></visible>
        </element>
        <element id="Digits" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Digits">
            <attributes>
                <attribute id="digits.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Digits</display-name>
                    <description>
                        The value of the field or property must be a number within a specified range. The integer element specifies the maximum integral digits for the number, and the fraction element specifies the maximum fractional digits for the number.
                    </description>
                </attribute>
                <attribute id="digits.fraction" class="java.lang.Integer" name="fraction">
                    <display-name>      Fraction</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="digits.integer" class="java.lang.Integer" name="integer">
                    <display-name>      Integer</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="digits.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Digits") != null]]></visible>
        </element>
        <element id="Min" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Min">
            <attributes>
                <attribute id="min.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Min</display-name>
                    <description>
                        The value of the field or property must be an integer value greater than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="min.value" class="java.lang.Long" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="min.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Min") != null]]></visible>
        </element>
        <element id="Max" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Max">
            <attributes>
                <attribute id="max.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Max</display-name>
                    <description>
                        The value of the field or property must be an integer value lower than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="max.value" class="java.lang.Long" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="max.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("Max") != null]]></visible>
        </element>
        <element id="DecimalMin" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.DecimalMin">
            <attributes>
                <attribute id="decimalMin.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@DecimalMin</display-name>
                    <description>
                        The value of the field or property must be an integer value greater than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="decimalMin.value" class="java.lang.String" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="decimalMin.inclusive" class="java.lang.Boolean" name="inclusive" >
                    <display-name>      inclusive</display-name>
                    <description>
                        Specifies whether the specified minimum is inclusive or exclusive.
                        By default, it is inclusive.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="decimalMin.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("DecimalMin") != null]]></visible>
        </element>
        <element id="DecimalMax" groupId="ATTRIBUTE_CONSTRAINTS" category="ATTRIBUTE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.DecimalMax">
            <attributes>
                <attribute id="decimalMax.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true" >
                    <display-name>@DecimalMax</display-name>
                    <description>
                        The value of the field or property must be a decimal value lower than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="decimalMax.value" class="java.lang.String" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="decimalMax.inclusive" class="java.lang.Boolean" name="inclusive" >
                    <display-name>      inclusive</display-name>
                    <description>
                        Specifies whether the specified maximum is inclusive or exclusive.
                        By default, it is inclusive.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="decimalMax.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getAttributeConstraintsMap().get("DecimalMax") != null]]></visible>
        </element>
        
        
        
        <!--On Key-->
        <element id="Key.NotNull" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.NotNull">
            <attributes>
                <attribute id="Key.notnull.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true" >
                    <display-name>@NotNull</display-name>
                    <description>
                        The value of the field or property must not be null.
                    </description>
                </attribute>
                <attribute id="Key.notnull.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <!--<visible><![CDATA[(node.getAttribute().getKeyConstraintsMap().get("Null").selected==true && this.selected==true ) || node.getAttribute().getKeyConstraintsMap().get("Null").selected==false]]></visible>-->
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("NotNull") != null &&
                    ((node.getAttribute().getKeyConstraintsMap().get("Null").selected==true && this.selected==true ) || node.getAttribute().getKeyConstraintsMap().get("Null").selected==false)]]></visible>
        </element>
        <element id="Key.Null" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Null">
            <attributes>
                <attribute id="Key.null.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Null</display-name>
                    <description>
                        The value of the field or property must be null.
                    </description>
                </attribute>
                <attribute id="Key.null.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Null") != null && 
                        ((node.getAttribute().getKeyConstraintsMap().get("NotNull").selected==true && this.selected==true ) || node.getAttribute().getKeyConstraintsMap().get("NotNull").selected==false)]]></visible>
        </element>
        <element id="Key.AssertFalse" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.AssertFalse">
            <attributes>
                <attribute id="Key.assertFalse.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@AssertFalse</display-name>
                    <description>
                        The value of the field or property must be false.
                    </description>
                </attribute>
                <attribute id="Key.assertFalse.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("AssertFalse") != null &&
                        ((node.getAttribute().getKeyConstraintsMap().get("AssertTrue").selected==true && this.selected==true ) || node.getAttribute().getKeyConstraintsMap().get("AssertTrue").selected==false)]]></visible>
        </element>
        <element id="Key.AssertTrue" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.AssertTrue">
            <attributes>
                <attribute id="Key.assertTrue.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@AssertTrue</display-name>
                    <description>
                        The value of the field or property must be true.
                    </description>
                </attribute>
                <attribute id="Key.assertTrue.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("AssertTrue") != null &&
                        ((node.getAttribute().getKeyConstraintsMap().get("AssertFalse").selected==true && this.selected==true ) || node.getAttribute().getKeyConstraintsMap().get("AssertFalse").selected==false)]]></visible>
        </element>
        <element id="Key.Past" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Past">
            <attributes>
                <attribute id="Key.past.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Past</display-name>
                    <description>
                        The value of the field or property must be a date in the past.
                    </description>
                </attribute>
<!--                <attribute id="Key.past.orPresent" class="java.lang.Boolean" name="orPresent" >
                    <display-name>      orPresent</display-name>
                    <description>
                        The notion of present here is defined relatively to the type on which the constraint is used. 
                        For instance, if the constraint is on a Year, present would mean the whole current year.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>-->
                <attribute id="Key.past.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Past") != null &&
                        ((node.getAttribute().getKeyConstraintsMap().get("Future").selected==true && this.selected==true ) || node.getAttribute().getKeyConstraintsMap().get("Future").selected==false)]]></visible>
        </element>
        <element id="Key.Future" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Future">
            <attributes>
                <attribute id="Key.future.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Future</display-name>
                    <description>
                        The value of the field or property must be a date in the future.
                    </description>
                </attribute>
<!--                <attribute id="Key.future.orPresent" class="java.lang.Boolean" name="orPresent" >
                    <display-name>      orPresent</display-name>
                    <description>
                        The notion of present here is defined relatively to the type on which the constraint is used. 
                        For instance, if the constraint is on a Year, present would mean the whole current year.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>-->
                <attribute id="Key.future.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Future") != null &&
                        ((node.getAttribute().getKeyConstraintsMap().get("Past").selected==true && this.selected==true ) || node.getAttribute().getKeyConstraintsMap().get("Past").selected==false)]]></visible>
        </element>
        <element id="Key.Size" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Size">
            <attributes>
                <attribute id="Key.size.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Size</display-name>
                    <description>
                        The size of the field or property is evaluated and must match the specified boundaries. 
                    </description>
                </attribute>
                <attribute id="Key.size.min" class="java.lang.Integer" name="min">
                    <display-name>      Min size</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.size.max" class="java.lang.Integer" name="max">
                    <display-name>      Max size</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.size.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Size") != null]]></visible>
        </element>
        <element id="Key.Pattern" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Pattern">
            <attributes>
                <attribute id="Key.pattern.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Pattern</display-name>
                    <description>
                        The value of the field or property must match the regular expression defined in the regexp element.
                    </description>
                </attribute>
                <attribute id="Key.pattern.regexp" class="java.lang.String" name="regexp">
                    <display-name>      regexp</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.pattern.flags" class="java.lang.String" name="flags">
                    <display-name>      flag</display-name>
                    <description>
                        Flags considered when resolving the regular expression.
                        [ UNIX_LINES, CASE_INSENSITIVE, COMMENTS, MULTILINE, DOTALL, UNICODE_CASE, CANON_EQ ]
                        *** e.g : CASE_INSENSITIVE, MULTILINE (comma-separated value)
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>                    
                </attribute>
                <attribute id="Key.pattern.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Pattern") != null]]></visible>
        </element>
        <element id="Key.Digits" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Digits">
            <attributes>
                <attribute id="Key.digits.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Digits</display-name>
                    <description>
                        The value of the field or property must be a number within a specified range. The integer element specifies the maximum integral digits for the number, and the fraction element specifies the maximum fractional digits for the number.
                    </description>
                </attribute>
                <attribute id="Key.digits.fraction" class="java.lang.Integer" name="fraction">
                    <display-name>      Fraction</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.digits.integer" class="java.lang.Integer" name="integer">
                    <display-name>      Integer</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.digits.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Digits") != null]]></visible>
        </element>
        <element id="Key.Min" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Min">
            <attributes>
                <attribute id="Key.min.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Min</display-name>
                    <description>
                        The value of the field or property must be an integer value greater than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Key.min.value" class="java.lang.Long" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.min.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Min") != null]]></visible>
        </element>
        <element id="Key.Max" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Max">
            <attributes>
                <attribute id="Key.max.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Max</display-name>
                    <description>
                        The value of the field or property must be an integer value lower than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Key.max.value" class="java.lang.Long" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.max.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("Max") != null]]></visible>
        </element>
        <element id="Key.DecimalMin" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.DecimalMin">
            <attributes>
                <attribute id="Key.decimalMin.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@DecimalMin</display-name>
                    <description>
                        The value of the field or property must be an integer value greater than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Key.decimalMin.value" class="java.lang.String" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.decimalMin.inclusive" class="java.lang.Boolean" name="inclusive" >
                    <display-name>      inclusive</display-name>
                    <description>
                        Specifies whether the specified minimum is inclusive or exclusive.
                        By default, it is inclusive.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.decimalMin.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("DecimalMin") != null]]></visible>
        </element>
        <element id="Key.DecimalMax" groupId="KEY_CONSTRAINTS" category="KEY_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.DecimalMax">
            <attributes>
                <attribute id="Key.decimalMax.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true" >
                    <display-name>@DecimalMax</display-name>
                    <description>
                        The value of the field or property must be a decimal value lower than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Key.decimalMax.value" class="java.lang.String" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.decimalMax.inclusive" class="java.lang.Boolean" name="inclusive" >
                    <display-name>      inclusive</display-name>
                    <description>
                        Specifies whether the specified maximum is inclusive or exclusive.
                        By default, it is inclusive.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Key.decimalMax.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getKeyConstraintsMap().get("DecimalMax") != null]]></visible>
        </element>
   
   
   
        <!--On Value-->
        <element id="Value.NotNull" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.NotNull">
            <attributes>
                <attribute id="Value.notnull.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true" >
                    <display-name>@NotNull</display-name>
                    <description>
                        The value of the field or property must not be null.
                    </description>
                </attribute>
                <attribute id="Value.notnull.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <!--<visible><![CDATA[(node.getAttribute().getValueConstraintsMap().get("Null").selected==true && this.selected==true ) || node.getAttribute().getValueConstraintsMap().get("Null").selected==false]]></visible>-->
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("NotNull") != null &&
                    ((node.getAttribute().getValueConstraintsMap().get("Null").selected==true && this.selected==true ) || node.getAttribute().getValueConstraintsMap().get("Null").selected==false)]]></visible>
        </element>
        <element id="Value.Null" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Null">
            <attributes>
                <attribute id="Value.null.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Null</display-name>
                    <description>
                        The value of the field or property must be null.
                    </description>
                </attribute>
                <attribute id="Value.null.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Null") != null && 
                        ((node.getAttribute().getValueConstraintsMap().get("NotNull").selected==true && this.selected==true ) || node.getAttribute().getValueConstraintsMap().get("NotNull").selected==false)]]></visible>
        </element>
        <element id="Value.AssertFalse" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.AssertFalse">
            <attributes>
                <attribute id="Value.assertFalse.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@AssertFalse</display-name>
                    <description>
                        The value of the field or property must be false.
                    </description>
                </attribute>
                <attribute id="Value.assertFalse.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("AssertFalse") != null &&
                        ((node.getAttribute().getValueConstraintsMap().get("AssertTrue").selected==true && this.selected==true ) || node.getAttribute().getValueConstraintsMap().get("AssertTrue").selected==false)]]></visible>
        </element>
        <element id="Value.AssertTrue" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.AssertTrue">
            <attributes>
                <attribute id="Value.assertTrue.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@AssertTrue</display-name>
                    <description>
                        The value of the field or property must be true.
                    </description>
                </attribute>
                <attribute id="Value.assertTrue.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("AssertTrue") != null &&
                        ((node.getAttribute().getValueConstraintsMap().get("AssertFalse").selected==true && this.selected==true ) || node.getAttribute().getValueConstraintsMap().get("AssertFalse").selected==false)]]></visible>
        </element>
        <element id="Value.Past" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Past">
            <attributes>
                <attribute id="Value.past.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Past</display-name>
                    <description>
                        The value of the field or property must be a date in the past.
                    </description>
                </attribute>
<!--                <attribute id="Value.past.orPresent" class="java.lang.Boolean" name="orPresent" >
                    <display-name>      orPresent</display-name>
                    <description>
                        The notion of present here is defined relatively to the type on which the constraint is used. 
                        For instance, if the constraint is on a Year, present would mean the whole current year.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>-->
                <attribute id="Value.past.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Past") != null &&
                        ((node.getAttribute().getValueConstraintsMap().get("Future").selected==true && this.selected==true ) || node.getAttribute().getValueConstraintsMap().get("Future").selected==false)]]></visible>
        </element>
        <element id="Value.Future" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Future">
            <attributes>
                <attribute id="Value.future.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Future</display-name>
                    <description>
                        The value of the field or property must be a date in the future.
                    </description>
                </attribute>
<!--                <attribute id="Value.future.orPresent" class="java.lang.Boolean" name="orPresent" >
                    <display-name>      orPresent</display-name>
                    <description>
                        The notion of present here is defined relatively to the type on which the constraint is used. 
                        For instance, if the constraint is on a Year, present would mean the whole current year.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>-->
                <attribute id="Value.future.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Future") != null &&
                        ((node.getAttribute().getValueConstraintsMap().get("Past").selected==true && this.selected==true ) || node.getAttribute().getValueConstraintsMap().get("Past").selected==false)]]></visible>
        </element>
        <element id="Value.Size" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Size">
            <attributes>
                <attribute id="Value.size.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Size</display-name>
                    <description>
                        The size of the field or property is evaluated and must match the specified boundaries. 
                    </description>
                </attribute>
                <attribute id="Value.size.min" class="java.lang.Integer" name="min">
                    <display-name>      Min size</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.size.max" class="java.lang.Integer" name="max">
                    <display-name>      Max size</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.size.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Size") != null]]></visible>
        </element>
        <element id="Value.Pattern" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Pattern">
            <attributes>
                <attribute id="Value.pattern.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Pattern</display-name>
                    <description>
                        The value of the field or property must match the regular expression defined in the regexp element.
                    </description>
                </attribute>
                <attribute id="Value.pattern.regexp" class="java.lang.String" name="regexp">
                    <display-name>      regexp</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.pattern.flags" class="java.lang.String" name="flags">
                    <display-name>      flag</display-name>
                    <description>
                        Flags considered when resolving the regular expression.
                        [ UNIX_LINES, CASE_INSENSITIVE, COMMENTS, MULTILINE, DOTALL, UNICODE_CASE, CANON_EQ ]
                        *** e.g : CASE_INSENSITIVE, MULTILINE (comma-separated value)
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>                    
                </attribute>
                <attribute id="Value.pattern.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Pattern") != null]]></visible>
        </element>
        <element id="Value.Digits" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Digits">
            <attributes>
                <attribute id="Value.digits.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Digits</display-name>
                    <description>
                        The value of the field or property must be a number within a specified range. The integer element specifies the maximum integral digits for the number, and the fraction element specifies the maximum fractional digits for the number.
                    </description>
                </attribute>
                <attribute id="Value.digits.fraction" class="java.lang.Integer" name="fraction">
                    <display-name>      Fraction</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.digits.integer" class="java.lang.Integer" name="integer">
                    <display-name>      Integer</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.digits.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Digits") != null]]></visible>
        </element>
        <element id="Value.Min" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Min">
            <attributes>
                <attribute id="Value.min.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Min</display-name>
                    <description>
                        The value of the field or property must be an integer value greater than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Value.min.value" class="java.lang.Long" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.min.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Min") != null]]></visible>
        </element>
        <element id="Value.Max" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.Max">
            <attributes>
                <attribute id="Value.max.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@Max</display-name>
                    <description>
                        The value of the field or property must be an integer value lower than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Value.max.value" class="java.lang.Long" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.max.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("Max") != null]]></visible>
        </element>
        <element id="Value.DecimalMin" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.DecimalMin">
            <attributes>
                <attribute id="Value.decimalMin.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true">
                    <display-name>@DecimalMin</display-name>
                    <description>
                        The value of the field or property must be an integer value greater than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Value.decimalMin.value" class="java.lang.String" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.decimalMin.inclusive" class="java.lang.Boolean" name="inclusive" >
                    <display-name>      inclusive</display-name>
                    <description>
                        Specifies whether the specified minimum is inclusive or exclusive.
                        By default, it is inclusive.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>                
                <attribute id="Value.decimalMin.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("DecimalMin") != null]]></visible>
        </element>
        <element id="Value.DecimalMax" groupId="VALUE_CONSTRAINTS" category="VALUE_CONSTRAINTS" class="org.netbeans.bean.validation.constraints.DecimalMax">
            <attributes>
                <attribute id="Value.decimalMax.selected" class="java.lang.Boolean" name="selected" refresh-onchange="true" >
                    <display-name>@DecimalMax</display-name>
                    <description>
                        The value of the field or property must be a decimal value lower than or equal to the number in the value element.
                    </description>
                </attribute>
                <attribute id="Value.decimalMax.value" class="java.lang.String" name="value">
                    <display-name>      value</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.decimalMax.inclusive" class="java.lang.Boolean" name="inclusive" >
                    <display-name>      inclusive</display-name>
                    <description>
                        Specifies whether the specified maximum is inclusive or exclusive.
                        By default, it is inclusive.
                    </description>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
                <attribute id="Value.decimalMax.message" class="java.lang.String" name="message">
                    <display-name>      Message</display-name>
                    <visible><![CDATA[this.selected==true]]></visible>
                </attribute>
            </attributes>
            <visible><![CDATA[node.getAttribute().getValueConstraintsMap().get("DecimalMax") != null]]></visible>
        </element>
    </elements>
</element-config>
