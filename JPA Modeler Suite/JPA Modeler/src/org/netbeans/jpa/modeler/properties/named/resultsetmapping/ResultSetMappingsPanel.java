/**
 * Copyright [2014] Gaurav Gupta
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package org.netbeans.jpa.modeler.properties.named.resultsetmapping;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.netbeans.jpa.modeler.spec.ParameterMode;
import org.netbeans.jpa.modeler.spec.SqlResultSetMapping;
import org.netbeans.jpa.modeler.spec.StoredProcedureParameter;
import org.netbeans.modeler.core.ModelerFile;
import org.netbeans.modeler.core.NBModelerUtil;
import org.netbeans.modeler.properties.entity.custom.editor.combobox.client.entity.ComboBoxValue;
import org.netbeans.modeler.properties.entity.custom.editor.combobox.client.entity.Entity;
import org.netbeans.modeler.properties.entity.custom.editor.combobox.client.entity.RowValue;
import org.netbeans.modeler.properties.entity.custom.editor.combobox.internal.EntityComponent;

public class ResultSetMappingsPanel extends EntityComponent<SqlResultSetMapping> {
private final ModelerFile modelerFile;
    public ResultSetMappingsPanel(ModelerFile modelerFile) {
        super("", true);
        this.modelerFile=modelerFile;
        initComponents();
    }

    @Override
    public void init() {
    
    }

    @Override
    public void createEntity(Class<? extends Entity> entityWrapperType) {
        this.setTitle("Create new ResultSet Mapping");
        if (entityWrapperType == RowValue.class) {
            this.setEntity(new RowValue(new Object[4]));
        }
        
    }

    @Override
    public void updateEntity(Entity<SqlResultSetMapping> entityValue) {
        this.setTitle("Update ResultSet Mapping");
        if (entityValue.getClass() == RowValue.class) {
            this.setEntity(entityValue);
            Object[] row = ((RowValue) entityValue).getRow();
            SqlResultSetMapping resultSetMapping = (SqlResultSetMapping) row[0];
//            name_TextField.setText(resultSetMapping.getName());
//            
//            if(((DefaultComboBoxModel)type_jComboBox.getModel()).getIndexOf(resultSetMapping.getClazz()) == -1 ) {
//                ((DefaultComboBoxModel)type_jComboBox.getModel()).addElement(resultSetMapping.getClazz());
//            }
//            type_jComboBox.setSelectedItem(resultSetMapping.getClazz());
//            
//            setParameterMode(resultSetMapping.getMode());
        }
    }

    
//    private void setParameterMode(ParameterMode parameterMode) {
//        if (parameterMode == null) {
//            mode_jComboBox.setSelectedIndex(0);
//        } else {
//            for (int i = 0; i < mode_jComboBox.getItemCount(); i++) {
//                if (((ComboBoxValue<ParameterMode>) mode_jComboBox.getItemAt(i)).getValue() == parameterMode) {
//                    mode_jComboBox.setSelectedIndex(i);
//                }
//            }
//        }
//    }
//    private ParameterMode getParameterMode() {
//       return ((ComboBoxValue<ParameterMode>) mode_jComboBox.getSelectedItem()).getValue();
//    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        root_jLayeredPane = new javax.swing.JLayeredPane();
        jTabbedPane = new javax.swing.JTabbedPane();
        entityResult_LayeredPane = new javax.swing.JLayeredPane();
        entityResultEditor = new org.netbeans.modeler.properties.nentity.NEntityEditor();
        constructorResult_LayeredPane1 = new javax.swing.JLayeredPane();
        constructorResultEditor = new org.netbeans.modeler.properties.nentity.NEntityEditor();
        columnResult_LayeredPane = new javax.swing.JLayeredPane();
        columnResultEditor = new org.netbeans.modeler.properties.nentity.NEntityEditor();
        action_jLayeredPane = new javax.swing.JLayeredPane();
        save_Button = new javax.swing.JButton();
        cancel_Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        entityResult_LayeredPane.setPreferredSize(new java.awt.Dimension(460, 30));

        javax.swing.GroupLayout entityResult_LayeredPaneLayout = new javax.swing.GroupLayout(entityResult_LayeredPane);
        entityResult_LayeredPane.setLayout(entityResult_LayeredPaneLayout);
        entityResult_LayeredPaneLayout.setHorizontalGroup(
            entityResult_LayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(entityResultEditor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        entityResult_LayeredPaneLayout.setVerticalGroup(
            entityResult_LayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(entityResultEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
        );
        entityResult_LayeredPane.setLayer(entityResultEditor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ResultSetMappingsPanel.class, "ResultSetMappingsPanel.entityResult_LayeredPane.TabConstraints.tabTitle"), entityResult_LayeredPane); // NOI18N

        constructorResult_LayeredPane1.setPreferredSize(new java.awt.Dimension(460, 30));

        javax.swing.GroupLayout constructorResult_LayeredPane1Layout = new javax.swing.GroupLayout(constructorResult_LayeredPane1);
        constructorResult_LayeredPane1.setLayout(constructorResult_LayeredPane1Layout);
        constructorResult_LayeredPane1Layout.setHorizontalGroup(
            constructorResult_LayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(constructorResultEditor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        constructorResult_LayeredPane1Layout.setVerticalGroup(
            constructorResult_LayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(constructorResultEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
        );
        constructorResult_LayeredPane1.setLayer(constructorResultEditor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ResultSetMappingsPanel.class, "ResultSetMappingsPanel.constructorResult_LayeredPane1.TabConstraints.tabTitle"), constructorResult_LayeredPane1); // NOI18N

        columnResult_LayeredPane.setPreferredSize(new java.awt.Dimension(460, 30));

        javax.swing.GroupLayout columnResult_LayeredPaneLayout = new javax.swing.GroupLayout(columnResult_LayeredPane);
        columnResult_LayeredPane.setLayout(columnResult_LayeredPaneLayout);
        columnResult_LayeredPaneLayout.setHorizontalGroup(
            columnResult_LayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(columnResultEditor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        columnResult_LayeredPaneLayout.setVerticalGroup(
            columnResult_LayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(columnResultEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
        );
        columnResult_LayeredPane.setLayer(columnResultEditor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane.addTab(org.openide.util.NbBundle.getMessage(ResultSetMappingsPanel.class, "ResultSetMappingsPanel.columnResult_LayeredPane.TabConstraints.tabTitle"), columnResult_LayeredPane); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(save_Button, org.openide.util.NbBundle.getMessage(ResultSetMappingsPanel.class, "ResultSetMappingsPanel.save_Button.text")); // NOI18N
        save_Button.setToolTipText(org.openide.util.NbBundle.getMessage(ResultSetMappingsPanel.class, "ResultSetMappingsPanel.save_Button.toolTipText")); // NOI18N
        save_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_ButtonActionPerformed(evt);
            }
        });
        action_jLayeredPane.add(save_Button);
        save_Button.setBounds(0, 0, 70, 23);

        org.openide.awt.Mnemonics.setLocalizedText(cancel_Button, org.openide.util.NbBundle.getMessage(ResultSetMappingsPanel.class, "ResultSetMappingsPanel.cancel_Button.text")); // NOI18N
        cancel_Button.setToolTipText(org.openide.util.NbBundle.getMessage(ResultSetMappingsPanel.class, "ResultSetMappingsPanel.cancel_Button.toolTipText")); // NOI18N
        cancel_Button.setPreferredSize(new java.awt.Dimension(60, 23));
        cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_ButtonActionPerformed(evt);
            }
        });
        action_jLayeredPane.add(cancel_Button);
        cancel_Button.setBounds(80, 0, 70, 23);

        javax.swing.GroupLayout root_jLayeredPaneLayout = new javax.swing.GroupLayout(root_jLayeredPane);
        root_jLayeredPane.setLayout(root_jLayeredPaneLayout);
        root_jLayeredPaneLayout.setHorizontalGroup(
            root_jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(root_jLayeredPaneLayout.createSequentialGroup()
                .addGap(0, 386, Short.MAX_VALUE)
                .addComponent(action_jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(root_jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE))
        );
        root_jLayeredPaneLayout.setVerticalGroup(
            root_jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, root_jLayeredPaneLayout.createSequentialGroup()
                .addGap(0, 413, Short.MAX_VALUE)
                .addComponent(action_jLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(root_jLayeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(root_jLayeredPaneLayout.createSequentialGroup()
                    .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 38, Short.MAX_VALUE)))
        );
        root_jLayeredPane.setLayer(jTabbedPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
        root_jLayeredPane.setLayer(action_jLayeredPane, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(root_jLayeredPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(root_jLayeredPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean validateField() {
//        if (this.type_jComboBox.getSelectedItem().toString().trim().length() <= 0 /*|| Pattern.compile("[^\\w-]").matcher(this.id_TextField.getText().trim()).find()*/) {
//            JOptionPane.showMessageDialog(this, "Type can't be empty", "Invalid Value", javax.swing.JOptionPane.WARNING_MESSAGE);
//            return false;
//        }//I18n
      
        return true;
    }

    private void save_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_ButtonActionPerformed
        if (!validateField()) {
            return;
        }
        StoredProcedureParameter storedProcedureParameter = null;
        if (this.getEntity().getClass() == RowValue.class) {
            Object[] row = ((RowValue) this.getEntity()).getRow();
            if (row[0] == null) {
                storedProcedureParameter = new StoredProcedureParameter();
            } else {
                storedProcedureParameter = (StoredProcedureParameter) row[0];
            }
        }
//        storedProcedureParameter.setName(name_TextField.getText());
//        storedProcedureParameter.setClazz(type_jComboBox.getSelectedItem().toString());
//        storedProcedureParameter.setMode(getParameterMode());
        
        if (this.getEntity().getClass() == RowValue.class) {
            Object[] row = ((RowValue) this.getEntity()).getRow();
            row[0] = storedProcedureParameter;
            row[1] = storedProcedureParameter.getName();
            row[2] = storedProcedureParameter.getClazz();
            row[3] = storedProcedureParameter.getMode();
        }
        saveActionPerformed(evt);
    }//GEN-LAST:event_save_ButtonActionPerformed

    private void cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_ButtonActionPerformed
        cancelActionPerformed(evt);
    }//GEN-LAST:event_cancel_ButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane action_jLayeredPane;
    private javax.swing.JButton cancel_Button;
    private org.netbeans.modeler.properties.nentity.NEntityEditor columnResultEditor;
    private javax.swing.JLayeredPane columnResult_LayeredPane;
    private org.netbeans.modeler.properties.nentity.NEntityEditor constructorResultEditor;
    private javax.swing.JLayeredPane constructorResult_LayeredPane1;
    private org.netbeans.modeler.properties.nentity.NEntityEditor entityResultEditor;
    private javax.swing.JLayeredPane entityResult_LayeredPane;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JLayeredPane root_jLayeredPane;
    private javax.swing.JButton save_Button;
    // End of variables declaration//GEN-END:variables
}
